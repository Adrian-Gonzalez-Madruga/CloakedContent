#pragma checksum "C:\Users\WayMaker\source\repos\Adrian-Gonzalez-Madruga\CloakedContent\CloakedContent\Views\Home\CreatePage.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "69e4d517a2734d168503a057e6c1b26312741da6"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_CreatePage), @"mvc.1.0.view", @"/Views/Home/CreatePage.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\WayMaker\source\repos\Adrian-Gonzalez-Madruga\CloakedContent\CloakedContent\Views\_ViewImports.cshtml"
using CloakedContent;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\WayMaker\source\repos\Adrian-Gonzalez-Madruga\CloakedContent\CloakedContent\Views\_ViewImports.cshtml"
using CloakedContent.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"69e4d517a2734d168503a057e6c1b26312741da6", @"/Views/Home/CreatePage.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6ca34d5b41d67a8d2f330ee5c80f02c4570c3ddc", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_CreatePage : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Users\WayMaker\source\repos\Adrian-Gonzalez-Madruga\CloakedContent\CloakedContent\Views\Home\CreatePage.cshtml"
  
    ViewData["Title"] = "CreatePage";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<style>

    #divBody {
        border: 1px solid black;
    }

    #divNew {
        float: left;
        width: 250px;
        height: 250px;
        margin: 10px;
        padding: 10px;
        border: 1px solid black;
    }

    #divDelete {
        background-color: red;
        float: left;
        width: 250px;
        height: 250px;
        margin: 10px;
        padding: 10px;
        border: 1px solid black;
    }

    #divLong {
        float: left;
        width: 200px;
        height: 400px;
        margin: 10px;
        padding: 10px;
        border: 1px solid black;
    }

    #divWide {
        float: left;
        width: 400px;
        height: 200px;
        margin: 10px;
        padding: 10px;
        border: 1px solid black;
    }

    #divSm {
        float: left;
        width: 200px;
        height: 200px;
        margin: 10px;
        padding: 10px;
        border: 1px solid black;
    }

    #divMd {
        float: left;
        wi");
            WriteLiteral(@"dth: 400px;
        height: 400px;
        margin: 10px;
        padding: 10px;
        border: 1px solid black;
    }

    #divLg {
        float: left;
        width: 800px;
        height: 800px;
        margin: 10px;
        padding: 10px;
        border: 1px solid black;
    }
</style>

<div class=""d-flex"">
    <div class=""w-25 p-2"">
        <div class=""sidebar-heading"">Content Block</div>
        <div class=""list-group list-group-flush"">
            <div class=""dropdown"">
                <button class=""btn btn-secondary dropdown-toggle"" type=""button"" id=""dropdownMenuButton"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                    Template Selection
                </button>
                <div class=""dropdown-menu"" aria-labelledby=""dropdownMenuButton"">
                    <a class=""dropdown-item"" href=""#"">Template 1</a>
                    <a class=""dropdown-item"" href=""#"">Template 2</a>
                    <a class=""dropdown-item"" href=""#"">Temp");
            WriteLiteral(@"late 3</a>
                </div>
            </div>
            <a href=""#"" class=""list-group-item list-group-item-action bg-light"">Title</a>
            <button onclick=""createPara()"" class=""list-group-item list-group-item-action bg-light"">Paragraph block</button>
            <a href=""#"" class=""list-group-item list-group-item-action bg-light"">Square Image</a>
            <a href=""#"" class=""list-group-item list-group-item-action bg-light"">Circle Image</a>
            <a href=""#"" class=""list-group-item list-group-item-action bg-light"">Video</a>
        </div>
        <div id=""divNew"" ondrop=""drop(event)"" ondragover=""allowDrop(event)""></div>
    </div>
    <div class=""w-50 p-2 align-self-stretch text-white bg-dark"">

        <h2>Drag and Drop</h2>
        <p>Drag the image back and forth between the two div elements.</p>
        <div id=""divBody"" ondrop=""drop(event)"" ondragover=""allowDrop(event)"">

            <div id=""divSm"" ondrop=""drop(event)"" ondragover=""allowDrop(event)"" draggable=""true"" ");
            WriteLiteral(@"ondragstart=""drag(event)"">
                <h1 id=""drag1"" draggable=""true"" ondragstart=""drag(event)""> SOME WORD</h1>
            </div>

            <div id=""divSm"" ondrop=""drop(event)"" ondragover=""allowDrop(event)"" draggable=""true"" ondragstart=""drag(event)""></div>
        </div>
    </div>
    <div class=""w-25 p-2"">
        <div class=""sidebar-heading"">Content</div>
        <div class=""list-group list-group-flush"">
            <button onclick=""createDiv('Sm')"" class=""list-group-item list-group-item-action bg-light"">Small</button>
            <button onclick=""createDiv('Md')"" class=""list-group-item list-group-item-action bg-light"">Medium</button>
            <button onclick=""createDiv('Lg')"" class=""list-group-item list-group-item-action bg-light"">Large</button>
            <button onclick=""createDiv('Long')"" class=""list-group-item list-group-item-action bg-light"">Long</button>
            <button onclick=""createDiv('Wide')"" class=""list-group-item list-group-item-action bg-light"">Wide</button>
 ");
            WriteLiteral(@"       </div>
        <div id=""divDelete"" ondrop=""dropDelete(event)"" ondragover=""allowDrop(event)""></div>
    </div>
</div>


<script>

    function dropDelete(ev) {
        ev.preventDefault();
        var data = ev.dataTransfer.getData(""text"");
        document.getElementById(data).remove();

    }

    function allowDrop(ev) {
        ev.preventDefault();
    }

    function drag(ev) {
        ev.dataTransfer.setData(""text"", ev.target.id);
    }

    function drop(ev) {
        ev.preventDefault();
        var data = ev.dataTransfer.getData(""text"");
        ev.target.appendChild(document.getElementById(data));
    }

    function createPara() {
        var addNew = document.getElementById('divNew');
        var p = document.createElement(""p"");

        p.id = ""drag"" + count;
        p.draggable = ""true"";
        p.addEventListener('dragstart', function () { drag(event) }, false);
        addNew.append(p);
        p.innerText = ""Some Text For A Para"";
    }

    funct");
            WriteLiteral(@"ion createDiv(type) {
        var addNew = document.getElementById('divBody');
        var d = document.createElement(""div"");

        d.id = ""div"" + type ;
        d.draggable = ""true"";
        d.addEventListener('dragstart', function () { drag(event) }, false);
        d.addEventListener('ondragover', function () { allowDrop(event) }, false);
        d.addEventListener('ondrop', function () { drop(event) }, false);
        addNew.append(d);
    }

</script>
<!-- p.id=""drag2""
        p.draggable=""true""
        p.ondragstart=""drag(event)""
    var p = document.createElement(""p"", [id = ""drag1"", draggable = ""true"", ondragstart = ""drag(event)""]) -->
<!-- ""<p id='drag1' draggable='true' ondragstart='drag(event)'>"" -->");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
